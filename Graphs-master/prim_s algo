#include <bits/stdc++.h>
using namespace std;
int getmin(int *wt,bool* visited,int v){
    int minvertex=-1;
    for (int i=0;i<v-1;i++){
        if (!visited[i] and (minvertex==-1 ||wt[i]<wt[minvertex])){
            minvertex=i;
        }
    }
    return minvertex;
}
void prims (int** edge,int v){
    int* parent = new int[v];
    int *wt = new int[v];
    bool*visited = new bool [v];
    for (int i=0;i<v;i++){
        wt[i]=INT_MAX;
    }
    parent [0]=-1;
    wt[0]=0;
    for (int i=0;i<v-1;i++){
        int minvertex=getmin(wt,visited,v);
        visited[minvertex]=true;
        for (int j=0;j<v;j++){
            if (edge[minvertex][j] and !visited[j]){
                if (edge[minvertex][j]<wt[j]){
                    wt[j]=edge[minvertex][j];
                    parent[j]=minvertex;
                }
            }
        }
    }
    for (int i=1;i<v;i++){
        if (parent[i]<i){
            cout<<parent[i]<<" "<<i<<" "<<wt[i]<<endl;
        }
        else{
            cout<<i<<" "<<parent[i]<<" "<<wt[i]<<endl;
        }
    }
    delete []parent;
    delete []wt;
    delete []visited;
}
int main() {
	int v,e;cin>>v>>e;
int **edges = new int*[v];
for (int i=0;i<v;i++){
    edges[i]=new int [v];
    for (int j=0;j<v;j++){
        edges[i][j]=0;
    }
}
for (int i=0;i<e;i++){
int sn,en,wt;cin>>sn>>en>>wt;
edges[sn][en]=wt;
edges[en][sn]=wt;
}
prims(edges,v);
	return 0;
	for (int i=0;i<v;i++){
        delete [] edges[i];
    }
    delete []edges;
}
